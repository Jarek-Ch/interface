webpackHotUpdate("main",{

/***/ "./src/vuex/actions.js":
/*!*****************************!*\
  !*** ./src/vuex/actions.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es6.function.name */ \"./node_modules/core-js/modules/es6.function.name.js\");\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.array.find */ \"./node_modules/core-js/modules/es6.array.find.js\");\n/* harmony import */ var core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_find__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime-corejs2/core-js/promise */ \"./node_modules/@babel/runtime-corejs2/core-js/promise.js\");\n/* harmony import */ var _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/common */ \"./src/vuex/utils/common.js\");\n\n\n\n\nvar actions = {\n  /*\n   * Breakpoint\n   */\n  setBreakpoint: function setBreakpoint(context, data) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      context.commit('setBreakpoint', data);\n      resolve(data);\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n\n  /*\n   * Devmode\n   */\n  setDevMode: function setDevMode(context, data) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      context.commit('setDevMode', data);\n      resolve(data);\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n\n  /*\n   * Languages\n   */\n  getLanguages: function getLanguages(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"languages/\")).then(function (response) {\n        context.commit('setLanguages', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createLanguage: function createLanguage(context, language) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"languages/\"), language).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Your new language has been added.'\n        });\n        context.commit('createLanguage', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateLanguage: function updateLanguage(context, language) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"languages/\").concat(language.id), language).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Your new language has been updated.'\n        });\n        context.commit('updateLanguage', {\n          language: language,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n\n  /*\n   * Media Manager\n   */\n  setCurrentDirectory: function setCurrentDirectory(context, directory) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      context.commit('setCurrentDirectory', directory);\n      resolve();\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  generateImages: function generateImages(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"media-styles\"), payload).then(function (response) {\n        context.commit('setFiles', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  regenerateMedia: function regenerateMedia(context, payload) {\n    context.commit('addToMediaRegenerationRequests', payload);\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"media-styles/\").concat(payload.instanceId, \"/\").concat(payload.fieldName), payload).then(function (response) {\n        context.commit('setFiles', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  mediaSearch: function mediaSearch(context, query) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"media-search?q=\").concat(query)).then(function (response) {\n        resolve(response.data);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getCurrentFiles: function getCurrentFiles(context, options) {\n    var imagesOnly = '';\n\n    if (options && options.type === 'image') {\n      imagesOnly = '?type=image';\n    }\n\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"media/\").concat(context.state.currentDirectory).concat(imagesOnly)).then(function (response) {\n        context.commit('setFiles', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getCurrentDirectories: function getCurrentDirectories(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"media-directories/\").concat(context.state.currentDirectory)).then(function (response) {\n        context.commit('setDirectories', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  toggleFile: function toggleFile(context, theFile) {\n    var match = context.state.files.find(function (file) {\n      return file.name === theFile.name;\n    });\n    var onOff = typeof match.on === 'undefined' || match.on === false;\n    context.commit('toggleFileOnOff', {\n      file: match,\n      on: onOff\n    });\n  },\n  deleteFile: function deleteFile(context, file) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"media\").concat(file.url)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'File Deleted',\n          message: 'The file was successfully deleted from the server.'\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createDirectory: function createDirectory(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"media-directories\"), {\n        directory: payload.directory,\n        name: payload.name\n      }).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Directory Created',\n          message: 'The directory was successfully created.'\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteDirectory: function deleteDirectory(context, directory) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"media-directories\"), {\n        params: {\n          directory: directory\n        }\n      }).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Directory Deleted',\n          message: 'The directory was successfully deleted from the server.'\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n\n  /*\n   * Meta\n   */\n  getMeta: function getMeta(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"meta/\")).then(function (response) {\n        context.commit('setMeta', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createMeta: function createMeta(context, meta) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"meta/\"), meta).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Your new meta has been added.'\n        });\n        context.commit('createMeta', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateMeta: function updateMeta(context, meta) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"meta/\").concat(meta.id), meta).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Your new meta has been updated.'\n        });\n        context.commit('updateMeta', {\n          meta: meta,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteMeta: function deleteMeta(context, meta) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"meta/\").concat(meta.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'The meta has been deleted.'\n        });\n        context.commit('deleteMeta', meta);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n\n  /*\n   * Models\n   */\n  getModels: function getModels(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"models/\")).then(function (response) {\n        context.commit('setModels', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getModelSettings: function getModelSettings(context, modelQuery) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"models/settings?\").concat(modelQuery)).then(function (response) {\n        context.commit('setModelSettings', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getModelRecords: function getModelRecords(context, _ref) {\n    var model = _ref.model,\n        filters = _ref.filters;\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"models/query?class=\").concat(model, \"&\").concat(_utils_common__WEBPACK_IMPORTED_MODULE_3__[\"default\"].buildFilterParams(filters))).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Pages\n  getPages: function getPages(context, filters) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"pages/?\").concat(_utils_common__WEBPACK_IMPORTED_MODULE_3__[\"default\"].buildFilterParams(filters))).then(function (response) {\n        context.commit('setPages', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getPagesList: function getPagesList(context, filters) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      var params = filters.hasOwnProperty('language_id') ? \"language_id=\".concat(filters.language_id) : '';\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"routes?\").concat(params)).then(function (response) {\n        context.commit('setPagesList', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getPage: function getPage(context, id) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(id)).then(function (response) {\n        context.commit('appendPage', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  searchPages: function searchPages(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"pages-suggest/\"), {\n        params: {\n          payload: payload\n        }\n      }).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  copyPage: function copyPage(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(payload.page.id, \"/copy\"), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.data.title, \" has been copied from \").concat(payload.page.title, \".\")\n        });\n        context.commit('createPage', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  translatePage: function translatePage(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(payload.page.id, \"/copy\"), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.data.title, \" has been copied for translation from \").concat(payload.page.title, \".\")\n        });\n        context.commit('createPage', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createPage: function createPage(context, page) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"pages/\"), page).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(page.title, \" has been created.\")\n        });\n        context.commit('createPage', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updatePage: function updatePage(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      // TODO - Sanitize data\n      // const data = commonUtils.sanitizePageData(payload.data);\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(payload.data.id), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.data.title, \" has been saved.\")\n        });\n        context.commit('updatePage', {\n          page: payload.data,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deletePage: function deletePage(context, page) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(page.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(page.title, \" has been deleted.\")\n        });\n        context.commit('deletePage', page);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // This is the save used from the page editor\n  savePage: function savePage(context, page) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"pages/\").concat(page.id), page).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(page.title, \" has been saved.\")\n        });\n        window.deviseSettings.$bus.$emit('devise-page-saved');\n        context.commit('updatePage', {\n          page: page,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Page versions\n  copyPageVersion: function copyPageVersion(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"page-versions\"), {\n        page_version_id: payload.version.id,\n        name: \"\".concat(payload.version.name, \" Copy\")\n      }).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.version.name, \" has been copied.\")\n        });\n        context.commit('createPageVersion', {\n          page: payload.page,\n          data: response.data.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deletePageVersion: function deletePageVersion(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"page-versions/\").concat(payload.version.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.version.name, \" has been deleted.\")\n        });\n        context.commit('deletePageVersion', {\n          page: payload.page,\n          version: payload.version\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updatePageVersion: function updatePageVersion(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"page-versions/\").concat(payload.version.id), payload.version).then(function (response) {\n        context.commit('updatePageVersion', {\n          page: payload.page,\n          version: payload.version,\n          data: response.data\n        });\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.version.name, \" has been saved.\")\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  setPreviewModeInCurrentPage: function setPreviewModeInCurrentPage(context, payload) {\n    context.commit('setPreviewModeInCurrentPage', payload);\n  },\n  // Mothership\n  syncSites: function syncSites(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.defaults.headers.common.Authorization = \"Bearer \".concat(context.state.mothership['api-key']);\n      window.axios.post('https://mothership.app/api/v1/sites/sync', {\n        sites: payload\n      }).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Sync Complete!',\n          message: 'All sites are registred with Mothership!'\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getSiteAnalytics: function getSiteAnalytics(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.defaults.headers.common.Authorization = \"Bearer \".concat(context.state.mothership['api-key']);\n      window.axios.get(\"https://mothership.app/api/v1/analytics/site?site_id=\".concat(payload.site, \"&start_date=\").concat(payload.dates.start, \"&end_date=\").concat(payload.dates.end)).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getPageAnalytics: function getPageAnalytics(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.defaults.headers.common.Authorization = \"Bearer \".concat(context.state.mothership['api-key']);\n      window.axios.get(\"https://mothership.app/api/v1/analytics/page?site_id=\".concat(context.state.currentPage.site_id, \"&slug=\").concat(payload.slug, \"&start_date=\").concat(payload.dates.start, \"&end_date=\").concat(payload.dates.end)).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getPageAnalyticsTotals: function getPageAnalyticsTotals(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.defaults.headers.common.Authorization = \"Bearer \".concat(context.state.mothership['api-key']);\n      window.axios.get(\"https://mothership.app/api/v1/analytics/page/totals?site_id=\".concat(context.state.currentPage.site_id, \"&slug=\").concat(payload.slug, \"&date=\").concat(payload.date)).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  getPendingChanges: function getPendingChanges(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"mothership/pending-changes\")).then(function (response) {\n        context.commit('setChanges', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Sites\n  getSites: function getSites(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"sites/\")).then(function (response) {\n        context.commit('setSites', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createSite: function createSite(context, site) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"sites/\"), site).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(site.name, \" has been created.\")\n        });\n        context.commit('createSite', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateSite: function updateSite(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"sites/\").concat(payload.site.id), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.site.name, \" has been saved.\")\n        });\n        context.commit('updateSite', {\n          site: payload.site,\n          data: response.data.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteSite: function deleteSite(context, site) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"sites/\").concat(site.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(site.name, \" has been deleted.\")\n        });\n        context.commit('deleteSite', site);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Slices\n  getSlicesDirectories: function getSlicesDirectories(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"slices-directories/\")).then(function (response) {\n        context.commit('setSlicesDirectories', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createSlice: function createSlice(context, slice) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"slices/\"), slice).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(slice.name, \" has been created.\")\n        });\n        context.commit('createSlice', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateSlice: function updateSlice(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"slices/\").concat(payload.slice.id), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.data.name, \" has been saved.\")\n        });\n        context.commit('updateSlice', {\n          slice: payload.slice,\n          data: response.data.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteSlice: function deleteSlice(context, slice) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"slices/\").concat(slice.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(slice.name, \" has been deleted.\")\n        });\n        context.commit('deleteSlice', slice);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Redirects\n  getRedirects: function getRedirects(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"redirects/\")).then(function (response) {\n        context.commit('setRedirects', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createRedirect: function createRedirect(context, redirect) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"redirects/\"), redirect).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Redirect has been created.'\n        });\n        context.commit('createRedirect', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateRedirect: function updateRedirect(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"redirects/\").concat(payload.redirect.id), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Redirect has been saved.'\n        });\n        context.commit('updateRedirect', {\n          redirect: payload,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteRedirect: function deleteRedirect(context, redirect) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"redirects/\").concat(redirect.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: 'Redirect has been deleted.'\n        });\n        context.commit('deleteRedirect', redirect);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  // Users\n  getUsers: function getUsers(context) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.get(\"\".concat(context.state.api.baseUrl, \"users/\")).then(function (response) {\n        context.commit('setUsers', response.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  createUser: function createUser(context, user) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.post(\"\".concat(context.state.api.baseUrl, \"users/\"), user).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(user.name, \" has been created.\")\n        });\n        context.commit('createUser', response.data.data);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  updateUser: function updateUser(context, payload) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.put(\"\".concat(context.state.api.baseUrl, \"users/\").concat(payload.user.id), payload.data).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(payload.data.name, \" has been saved.\")\n        });\n        context.commit('updateUser', {\n          user: payload,\n          data: response.data\n        });\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  },\n  deleteUser: function deleteUser(context, user) {\n    return new _Users_garywilliams_Code_devise_interface_cli_node_modules_babel_runtime_corejs2_core_js_promise__WEBPACK_IMPORTED_MODULE_2___default.a(function (resolve) {\n      window.axios.delete(\"\".concat(context.state.api.baseUrl, \"users/\").concat(user.id)).then(function (response) {\n        window.deviseSettings.$bus.$emit('showMessage', {\n          title: 'Success!',\n          message: \"\".concat(user.name, \" has been deleted.\")\n        });\n        context.commit('deleteUser', user);\n        resolve(response);\n      }).catch(function (error) {\n        window.deviseSettings.$bus.$emit('showError', error);\n      });\n    }).catch(function (error) {\n      window.deviseSettings.$bus.$emit('showError', error);\n    });\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (actions);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/vuex/actions.js\n");

/***/ })

})